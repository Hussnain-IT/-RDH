
Django>=3.2
whitenoise
daphne


daphne RDH1.asgi:application























































































#back-btn {
    text-align: center;
    background-color: #ff9900;
    color: #fff;
    border: none;
    border-radius: 4px;
    padding: 10px 20px;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.2s, box-shadow 0.2s;
    box-shadow: 2px 6px rgba(0, 0, 0, 0.08);
}




def contact_agent_view(request, agent_id):
    agent = get_object_or_404(Agent, id=agent_id)
    if request.method == 'POST':
        name = request.POST.get('name')
        email = request.POST.get('email-contact')
        phone = request.POST.get('contact number')
        message = request.POST.get('message')
        Contact.objects.create(
            name=name,
            email=email,
            phone=phone,
            message=message
        )
        send_mail(
            subject=f'New Contact from {name}',
            message=f'Name: {name}\nEmail: {email}\nPhone: {phone}\nMessage: {message}',
            from_email=settings.DEFAULT_FROM_EMAIL,
            recipient_list=[agent.email],
            fail_silently=False,
        )
        return render(request, 'con4.html', {'success': True, 'agent': agent})
    return render(request, 'con4.html', {'agent': agent})







    from django import forms
from .models import Property

class PropertyForm(forms.ModelForm):
    class Meta:
        model = Property
        fields = [
            'title', 'property_type', 'image', 'beds', 'baths', 'area', 'location', 'owner', 'email', 'phone', 'price', 'description', 'status'
        ]

    def clean(self):
        cleaned_data = super().clean()
        required_fields = ['title', 'property_type', 'image', 'beds', 'baths', 'area', 'location', 'owner', 'email', 'phone', 'price']
        for field in required_fields:
            if not cleaned_data.get(field):
                self.add_error(field, 'This field is required.')
        return cleaned_data
